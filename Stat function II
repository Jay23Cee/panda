#Percent_change
#Series, DatFrames and Panel, all have the function pct_change(). This function compares every element with its prior element and computes the change percentage

import pandas as pd
import numpy as np

s= pd.Series([1,2,3,4,5,4])
print(s.pct_change())

df = pd.DataFrame(np.random.randn(5,2))
print(df.pct_change())



#By default, the pct_change() operates on columns; if you want to apply the same row wise, then use axis=1() argument.
#____________________________________
#Covariance
#Covariance is applied on series data. The Series object has a method cov to compute covariance between series objects. NA will be excluded automatically

import pandas as pd
import numpy as np

s1= pd.Series(np.random.randn(10))
s2 = pd.Series(np.random.randn(10))
print(s1.cov(s2))



#------------------------------------
frame = pd.DataFrame(np.random.randn(10,5), columns = ['a','b', 'c', 'd', 'e'])
prit(frame['a'].cov(frame['b']
print(frame.cov())


#+___________________________
#correlation
#correlation shows the linear relationship between any two array of values(series).
#There are multiple methods to compute the correlation like perason(default), spearma and kendall

print(frame['a'].corr(frame['b']
print(frame.corr() )


#_____________________________
#Data ranking

s = pd.Series(np.random.np.random.randn(5), index=list('abcde')
s['d'] = s['b'] # so teheres a tie

print(s.rank() )


