import pandas as pd
import numpy as np

#create a series with 100 random numbers.
s = pd.Series(np.random.randn(4))
#print(s)


print("the axes are: ")
print(s.axes)

print("Is the Object empty? ")
print(s.empty)

print("The dimension of the object")
print(s.ndim)


s = pd.Series(np.random.randn(2))
print("The size of the object")
print(s.size)

s = pd.Series(np.random.randn(4))
print("the actual data series is:")
print(s.values)


print ("The first two rows of the data series:")
print (s.head(2))

print ("The last two rows of the data series:")
print (s.tail(2))


#Create a Dictionary of series
d= {'Name' : pd.Series(['Tom' , 'James', 'Ricky', 'Vin', 'Steve', 'Smith', 'Jack' ]),
		'Age' : pd.Series([25,26,25,23,30,29,23]),
		'Rating': pd.Series([4.23,3.24,3.98,2.56,3.20,4.6,3.8])      }
		
	#Create a DataFrame 
df=pd.DataFrame(d)
print("Our data series is:")
print(df)


#Create a dictionary of series

#Create a DataFrame
#T returns the transpose of the dataframe. rows and column will interchange
print(df.T)
#Axes
# Return the list of row axis labels and column axis labels
print("Row axis labels and column axis labels are:")
print(df.axes)

#Dtype 
#returns the data type of each column
print("The data types of each column are:")
print(df.dtypes)

#empty
#Returns the boolean value saying whether the object is empty or not; True indicates that the object is empty

print("is the object empty?")
print(df.empty)


#NDIM
#Returns the number of dimensions of the object. By definition, DataFrame is a 2d object
print("Our object is:")
print(df)
print("The DIMENSION OF THE OBJECT IS:")
print(df.ndim)

#Shape
#Returns a tuple representing the dimensionality of the Dataframe.. Tuple(a,b), where a represents the number of rows and b represents the number of columns
print("\n\nOur object is:")
print(df)
print("The shape of the object is:")
print(df.shape)

#size
#Returns the number of elements in the DataFrame
print("\nThe total number of elements in our object is:")
print(df.size)

#Values
#Returns the actual data in the DataFrame as an NDarray
print("The actual data in our data frame is:")
print(df.values)


#Head & tail
#To view a small sample of a DataFrame object, use the head() and tail() methods. head() returns the first n rows (observe the index values). The default number of elements to display is five, but you may pass a custom number

print("\n\nOur object is:")
print(df)
print("The first two rows of the data frame is:")
print(df.head(2))


#Tail() returns the last n rows (observe the index values). the default number of elements to display is five, but you may pass a custom number
print("the last two rows of the data frame is:")
print(df.tail(2))







